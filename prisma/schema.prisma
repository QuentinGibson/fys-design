datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  role  String @default("USER")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Testimonial {
  id         String   @id @default(cuid())
  name       String   @unique
  content    String
  created_at DateTime @default(now())
}

model Project {
  id         String   @id @default(cuid())
  name       String   @unique
  image      String
  link       String?
  summary    String
  content    String
  created_at DateTime @default(now())

  services   Type[]
  industries Industry[]
}

model Industry {
  id         String   @id @default(cuid())
  name       String   @unique
  industry   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId  String?
  created_at DateTime @default(now())
}

model Type {
  id         String   @id @default(cuid())
  name       String   @unique
  project    Project? @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId  String?
  created_at DateTime @default(now())
}

model Case {
  id         String   @id @default(cuid())
  logo       String
  image      String
  name       String   @unique
  content    String
  created_at DateTime @default(now())
  tag        Tag[]
}

model Tag {
  id         String   @id @default(cuid())
  name       String   @unique
  case       Case?    @relation(fields: [caseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  caseId     String?
  created_at DateTime @default(now())
}

model Service {
  id          String   @id @default(cuid())
  image       String
  name        String
  description String
  created_at  DateTime @default(now())

  perks Perk[]
}

model Perk {
  id         String   @id @default(cuid())
  name       String   @unique
  service    Service? @relation(fields: [serviceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  serviceId  String?
  created_at DateTime @default(now())
}
